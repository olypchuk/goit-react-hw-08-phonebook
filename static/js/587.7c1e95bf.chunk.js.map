{"version":3,"file":"static/js/587.7c1e95bf.chunk.js","mappings":"yOAEaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,uMAUVE,EAAaF,EAAAA,GAAAA,OAAH,wD,+MCDjBG,EAASC,EAAAA,KAAaC,MAAM,CAEhCC,MAAOF,EAAAA,KACJG,SAAS,sBACTC,IAAI,GACJC,IAAI,IACPC,SAAUN,EAAAA,KACPG,SAAS,yBACTC,IAAI,GACJC,IAAI,MAMIE,EAAgB,CAC1BL,MAAO,GACRI,SAAS,IAEEE,EAAY,WAEvB,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAO,mCAAG,WAAMC,EAAN,0EAAiBC,EAAjB,EAAiBA,UAE/B,IACJJ,GAASK,EAAAA,EAAAA,IAAUF,IAClBG,EAAAA,OAAAA,QAAe,sBACV,MAAOC,GACPD,EAAAA,OAAAA,MAAa,gBAEnBF,IARkB,2CAAH,wDAWb,OAAQ,SAAC,KAAD,CACNI,cAAeV,EACfW,SAAUP,EACVQ,iBAAkBpB,EAHZ,UAIN,UAAC,IAAD,CAAYqB,aAAa,MAAzB,WAEK,kBAAOC,QAAQ,QAAf,oBACD,SAAC,KAAD,CACAC,GAAIC,IAAAA,WACJC,KAAK,OACLC,KAAK,QACLC,YAAY,iBAEd,SAAC,KAAD,CAAcD,KAAK,WACpB,kBAAOJ,QAAQ,QAAf,uBACK,SAAC,KAAD,CACFC,GAAIC,IAAAA,WACJC,KAAK,WACLC,KAAK,WACLC,YAAY,oBAEd,SAAC,KAAD,CAAcD,KAAK,cACnB,SAAC,IAAD,CAAYD,KAAK,SAAjB,qBAEA,8DAA+B,SAAC,KAAD,CAASG,GAAG,YAAZ,8BC7DrC,EAPkB,WACd,OAAQ,iCACJ,wCACA,SAACnB,EAAD","sources":["components/Form/Form.styled.js","pages/login/FormLogin.js","pages/login/Login.jsx"],"sourcesContent":["import styled from \"styled-components\"\nimport {Form} from \"formik\"\nexport const FormStyled = styled(Form)`\ntext-align: center;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nwidth: 400px;\nheight: 100%;\nbackground-color: rgba(221,42,123,1);\nborder-radius: 30px;\n`\nexport const FormButton = styled.button`\nmargin: 15px;\npadding: 15px;\n`","import React from \"react\"\nimport shortid from \"shortid\"\nimport { FormStyled ,FormButton} from \"../../components/Form/Form.styled\"\nimport { PropTypes } from \"prop-types\"\nimport { Formik, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup'\nimport { loginUser } from \"redux/auth/auth-operations\";\nimport { Notify } from \"notiflix\";\nimport { useDispatch } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\n\nconst schema = yup.object().shape({\n\n  email: yup.string()\n    .required('Please enter email')\n    .min(6)\n    .max(20),\n  password: yup.string()\n    .required('Please enter password')\n    .min(6)\n    .max(20)\n    // .matches(/\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/, \"Must be only digits\")\n\n\n})\n\nexport const INITIAL_STATE = {\n   email: '',\n  password:''\n}\nexport const FormLogin = () => {\n\n  const dispatch = useDispatch()\n  \n  const onLogin = async(payload, { resetForm }) => {\n  \n    try {\ndispatch(loginUser(payload))\n Notify.success(\"You are logged in!\")\n    } catch (error) {\n      Notify.error('cannot login')\n    }\nresetForm()\n      \n  }\n  return (<Formik\n    initialValues={INITIAL_STATE}\n    onSubmit={onLogin}\n    validationSchema={schema}>\n    <FormStyled autoComplete=\"off\">\n        \n         <label htmlFor=\"email\">Email</label>\n        <Field \n        id={shortid.generate()  }\n        type=\"text\"\n        name=\"email\"\n        placeholder=\"enter email\"\n        />\n      <ErrorMessage name=\"email\"/>\n     <label htmlFor=\"phone\">Password</label> \n          <Field\n        id={shortid.generate()  }\n        type=\"password\"\n        name=\"password\"\n        placeholder=\"enter password\"\n        />\n      <ErrorMessage name=\"password\"/>\n      <FormButton type=\"submit\">Log in</FormButton>\n      \n      <p> Donâ€™t have an account yet? <NavLink to='/register'>Sign up</NavLink></p>\n  </FormStyled>\n</Formik>)\n\n\n}\n\nFormLogin.propTypes = {\n  initialValues: PropTypes.object,\n  onSubmit:PropTypes.func,\n  validationSchema:PropTypes.object\n\n}\n","import { FormLogin } from \"./FormLogin\"\nconst LoginPage = () => {\n    return (<>\n        <div>LoginPage</div>\n        <FormLogin />\n    </>\n    )\n}\nexport default LoginPage"],"names":["FormStyled","styled","Form","FormButton","schema","yup","shape","email","required","min","max","password","INITIAL_STATE","FormLogin","dispatch","useDispatch","onLogin","payload","resetForm","loginUser","Notify","error","initialValues","onSubmit","validationSchema","autoComplete","htmlFor","id","shortid","type","name","placeholder","to"],"sourceRoot":""}
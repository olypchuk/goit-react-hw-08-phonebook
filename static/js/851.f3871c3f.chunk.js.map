{"version":3,"file":"static/js/851.f3871c3f.chunk.js","mappings":"yOAEaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,uMAUVE,EAAaF,EAAAA,GAAAA,OAAH,wD,gLCAjBG,EAASC,EAAAA,KAAaC,MAAM,CAChCC,KAAMF,EAAAA,KAEHG,IAAI,IACJC,SAAS,qBACTC,QAAQ,yHAA8D,wBACzEC,MAAON,EAAAA,KACJI,SAAS,sBACTG,IAAI,GACJJ,IAAI,IACPK,SAAUR,EAAAA,KACPI,SAAS,yBACTG,IAAI,GACJJ,IAAI,MAKIM,EAAgB,CAC3BP,KAAM,GACNI,MAAO,GACPE,SAAS,IAGEE,EAAU,WAErB,IAAMC,GAAWC,EAAAA,EAAAA,MAajB,OAAQ,SAAC,KAAD,CACNC,cAAeJ,EACfK,SAbmB,SAACC,EAAD,GAA6B,IAAjBC,EAAgB,EAAhBA,UAEjC,IACEL,GAASM,EAAAA,EAAAA,IAAWF,IACpBG,EAAAA,OAAAA,QAAe,sBACf,MAAOC,GACPD,EAAAA,OAAAA,MAAa,sBACfE,QAAQC,IAAI,QAASF,GAErBH,KAKEM,iBAAkBvB,EAHZ,UAIN,UAAC,IAAD,CAAYwB,aAAa,MAAzB,WACK,kBAAOC,QAAQ,OAAf,mBACD,SAAC,KAAD,CACAC,GAAIC,IAAAA,WACJC,KAAK,OACLzB,KAAK,OACL0B,YAAY,gBAEd,SAAC,KAAD,CAAc1B,KAAK,UAChB,kBAAOsB,QAAQ,QAAf,oBACD,SAAC,KAAD,CACAC,GAAIC,IAAAA,WACJC,KAAK,OACLzB,KAAK,QACL0B,YAAY,iBAEd,SAAC,KAAD,CAAc1B,KAAK,WACpB,kBAAOsB,QAAQ,WAAf,uBACK,SAAC,KAAD,CACFC,GAAIC,IAAAA,WACJC,KAAK,WACLzB,KAAK,WACL0B,YAAY,oBAEd,SAAC,KAAD,CAAc1B,KAAK,cACnB,SAAC,IAAD,CAAYyB,KAAK,SAAjB,uBACA,sDAA4B,SAAC,KAAD,CAASE,GAAG,SAAZ,6BC5DlC,EAnByB,WAcrB,OAAQ,iCACJ,6CACA,SAACnB,EAAD","sources":["components/Form/Form.styled.js","pages/registration/FormReg.js","pages/registration/Registration.jsx"],"sourcesContent":["import styled from \"styled-components\"\nimport {Form} from \"formik\"\nexport const FormStyled = styled(Form)`\ntext-align: center;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nwidth: 400px;\nheight: 100%;\nbackground-color: rgba(221,42,123,1);\nborder-radius: 30px;\n`\nexport const FormButton = styled.button`\nmargin: 15px;\npadding: 15px;\n`","import React from \"react\"\nimport shortid from \"shortid\"\nimport { NavLink } from \"react-router-dom\"\nimport { FormStyled ,FormButton} from \"../../components/Form/Form.styled\"\nimport { PropTypes } from \"prop-types\"\nimport { Formik, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup'\nimport { signUpUser } from \"redux/auth/auth-operations\";\nimport { useDispatch } from \"react-redux\";\nimport { Notify } from \"notiflix\";\n\n\nconst schema = yup.object().shape({\n  name: yup.string()\n   \n    .max(15)\n    .required(\"Please enter name\")\n    .matches(/^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/, \"Must be only letters\"),\n  email: yup.string()\n    .required('Please enter email')\n    .min(6)\n    .max(20),\n  password: yup.string()\n    .required('Please enter password')\n    .min(6)\n    .max(20)\n    // .matches(/\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/, \"Must be only digits\")\n\n})\n\nexport const INITIAL_STATE = {\n  name: '',\n  email: '',\n  password:''\n}\n\nexport const FormReg = () => {\n\n  const dispatch = useDispatch()\n  \n  const handleSubmit = (payload, { resetForm }) => {\n\n  try {\n    dispatch(signUpUser(payload))\n    Notify.success(\"you are signed up!\")\n  } catch (error) {\n    Notify.error('You canot register')\n  console.log('error', error)\n  }\n  resetForm()    \n}\n  return (<Formik\n    initialValues={INITIAL_STATE}\n    onSubmit={handleSubmit}\n    validationSchema={schema}>\n    <FormStyled autoComplete=\"off\">\n         <label htmlFor=\"name\">Name</label>\n        <Field \n        id={shortid.generate()  }\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"enter name\"\n        />\n      <ErrorMessage name=\"name\" />\n         <label htmlFor=\"email\">Email</label>\n        <Field \n        id={shortid.generate()  }\n        type=\"text\"\n        name=\"email\"\n        placeholder=\"enter email\"\n        />\n      <ErrorMessage name=\"email\"/>\n     <label htmlFor=\"password\">Password</label> \n          <Field\n        id={shortid.generate()  }\n        type=\"password\"\n        name=\"password\"\n        placeholder=\"enter password\"\n        />\n      <ErrorMessage name=\"password\"/>\n      <FormButton type=\"submit\">Register</FormButton>\n      <p>Already have an account? <NavLink to='/login'>Log in</NavLink></p>\n  </FormStyled>\n</Formik>)\n\n\n}\n\nFormReg.propTypes = {\n  initialValues: PropTypes.object,\n  onSubmit:PropTypes.func,\n  validationSchema:PropTypes.object\n\n}\n","import { FormReg } from \"./FormReg\"\n\nconst RegistrationPage = () => {\n\n    // data,\n    // isLoading,\n    // isSuccess,\n    // isError,\n    // error\n    // } = useCurrentQuery()\n\n    // console.log('data :>> ', data);\n    // console.log('isLoading', isLoading)\n    // console.log('isSuccess :>> ', isSuccess);\n    // console.log('isError', isError)\n    // console.log('error :>> ', error);\n    return (<>\n        <p>RegistrationPage</p>\n        <FormReg/></>\n    )\n}\nexport default RegistrationPage"],"names":["FormStyled","styled","Form","FormButton","schema","yup","shape","name","max","required","matches","email","min","password","INITIAL_STATE","FormReg","dispatch","useDispatch","initialValues","onSubmit","payload","resetForm","signUpUser","Notify","error","console","log","validationSchema","autoComplete","htmlFor","id","shortid","type","placeholder","to"],"sourceRoot":""}